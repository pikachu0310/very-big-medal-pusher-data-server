openapi: 3.0.3
info:
  title: Massive Medal Pusher Game Data API
  version: "2.0.0"
  description: |
    VRChat用メダルプッシャーワールド「クソでっけぇプッシャーゲーム」のプレイデータを送信するAPI。
    — v1 と後方互換の v2 を提供します。

servers:
  - url: https://push.trap.games

paths:
  # v1 endpoints (従来)
  /data:
    get:
      tags: [ v1 ]
      summary: ゲームデータを送信 (非推奨)
      description: |
        **⚠️ このエンドポイントは非推奨です。もう使われなくなりました。**
        
        HMAC署名付きの統計情報をGETで送信する
      deprecated: true
      parameters:
        - name: version
          in: query
          required: true
          schema: { type: integer }
        - name: user_id
          in: query
          required: true
          schema: { type: string }
        - name: have_medal
          in: query
          required: true
          schema: { type: integer }
        - name: in_medal
          in: query
          required: true
          schema: { type: integer }
        - name: out_medal
          in: query
          required: true
          schema: { type: integer }
        - name: slot_hit
          in: query
          required: true
          schema: { type: integer }
        - name: get_shirbe
          in: query
          required: true
          schema: { type: integer }
        - name: start_slot
          in: query
          required: true
          schema: { type: integer }
        - name: shirbe_buy300
          in: query
          required: true
          schema: { type: integer }
        - name: medal_1
          in: query
          required: true
          schema: { type: integer }
        - name: medal_2
          in: query
          required: true
          schema: { type: integer }
        - name: medal_3
          in: query
          required: true
          schema: { type: integer }
        - name: medal_4
          in: query
          required: true
          schema: { type: integer }
        - name: medal_5
          in: query
          required: true
          schema: { type: integer }
        - name: R_medal
          in: query
          required: true
          schema: { type: integer }
        - name: total_play_time
          in: query
          required: true
          schema: { type: integer }
        - name: fever
          in: query
          required: true
          schema: { type: integer }
        - name: sig
          in: query
          required: true
          description: HMAC-SHA256署名（順序固定・user_id込みで生成）
          schema: { type: string }
        - name: max_chain_item
          in: query
          schema: { type: integer }
        - name: max_chain_orange
          in: query
          schema: { type: integer }
        - name: max_chain_rainbow
          in: query
          schema: { type: integer }
        - name: sugoroku_steps
          in: query
          schema: { type: integer }
        - name: jackpots
          in: query
          schema: { type: integer }
        - name: max_jackpot_win
          in: query
          schema: { type: integer }
        - name: max_total_jackpot
          in: query
          schema: { type: integer }
        - name: max_total_ultimate
          in: query
          schema: { type: integer }
      responses:
        '410': { description: このエンドポイントはもう使われなくなりました }
        '200': { description: 正常に保存されました }
        '400': { description: 不正な署名 or パラメータ }
        '500': { description: サーバー内部エラー }

  /ping:
    get:
      tags: [ v1, v2, v3 ]
      summary: ヘルスチェック
      responses:
        '200': { description: サーバー稼働中 }

  /users/{user_id}/data:
    get:
      tags: [ v1 ]
      summary: ユーザーごとのゲームデータを取得 (非推奨)
      description: |
        **⚠️ このエンドポイントは非推奨です。もう使われなくなりました。**
      deprecated: true
      parameters:
        - name: user_id
          in: path
          required: true
          schema: { type: string }
      responses:
        '410': { description: このエンドポイントはもう使われなくなりました }
        '200':
          description: ユーザーのゲームデータ
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GameData'
        '404': { description: ユーザーが見つかりません }

  /rankings:
    get:
      tags: [ v1 ]
      summary: ランキングを取得 (非推奨)
      description: |
        **⚠️ このエンドポイントは非推奨です。もう使われなくなりました。**
      deprecated: true
      parameters:
        - name: sort
          in: query
          schema:
            type: string
            enum:
              - have_medal
              - fever
              - in_medal
              - out_medal
              - max_chain_item
              - max_chain_orange
              - max_chain_rainbow
            default: have_medal
        - name: limit
          in: query
          schema:
            type: integer
            default: 50
      responses:
        '410': { description: このエンドポイントはもう使われなくなりました }
        '200':
          description: ランキングデータ
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GameData'

  /total_medals:
    get:
      tags: [ v1 ]
      summary: 全ユーザーのメダル総量を取得 (非推奨)
      description: |
        **⚠️ このエンドポイントは非推奨です。もう使われなくなりました。**
        
        全ユーザーの最新データにおける `have_medal` の合計を返します
      deprecated: true
      responses:
        '410': { description: このエンドポイントはもう使われなくなりました }
        '200':
          description: メダル総量を返します
          content:
            application/json:
              schema:
                type: object
                properties:
                  total_medals: { type: integer }
        '500': { description: サーバー内部エラー }

  # v2 endpoints (新仕様)
  /v2/data:
    get:
      tags: [ v2 ]
      summary: セーブデータを送信 (v2・非推奨)
      description: |
        **⚠️ このエンドポイントは非推奨です。もう使われなくなりました。**
        
        JSON 化したセーブデータを GET パラメータで送信して保存します。
      deprecated: true
      parameters:
        - name: data
          in: query
          required: true
          schema: { type: string }
          description: URL エンコード済み JSON セーブデータ
        - name: user_id
          in: query
          required: true
          schema: { type: string }
        - name: sig
          in: query
          required: true
          schema: { type: string }
      responses:
        '410': { description: このエンドポイントはもう使われなくなりました }
        '200': { description: 正常に保存されました }
        '400': { description: 無効なパラメータ }
        '401': { description: 署名認証失敗 }
        '409': { description: 同一データの重複検出 }
        '500': { description: サーバー内部エラー }

  /v2/users/{user_id}/data:
    get:
      tags: [ v2 ]
      summary: ユーザーの最新セーブデータを取得 (v2・非推奨)
      description: |
        **⚠️ このエンドポイントは非推奨です。もう使われなくなりました。**
      deprecated: true
      parameters:
        - name: user_id
          in: path
          required: true
          schema: { type: string }
      responses:
        '410': { description: このエンドポイントはもう使われなくなりました }
        '200':
          description: セーブデータ
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SaveDataV2'
        '404': { description: データが見つかりません }
        '500': { description: サーバー内部エラー }

  /v2/statistics:
    get:
      tags: [ v2 ]
      summary: グローバル統計を取得 (v2・非推奨)
      description: |
        **⚠️ このエンドポイントは非推奨です。もう使われなくなりました。**
        
        各種ランキングと全ユーザーのメダル総量をまとめて返します。
      deprecated: true
      responses:
        '410': { description: このエンドポイントはもう使われなくなりました }
        '200':
          description: 統計データ
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatisticsV2'
        '500': { description: サーバー内部エラー }

  /v3/data:
    get:
      tags: [ v3 ]
      summary: セーブデータを送信 (v3)
      description: JSON 化したセーブデータを GET パラメータで送信して保存します。
      parameters:
        - name: data
          in: query
          required: true
          schema: { type: string }
          description: URL エンコード済み JSON セーブデータ
        - name: user_id
          in: query
          required: true
          schema: { type: string }
        - name: sig
          in: query
          required: true
          schema: { type: string }
      responses:
        '200': { description: 正常に保存されました }
        '400': { description: 無効なパラメータ }
        '401': { description: 署名認証失敗 }
        '409': { description: 同一データの重複検出 }
        '500': { description: サーバー内部エラー }

  /v3/users/{user_id}/data:
    get:
      tags: [ v3 ]
      summary: ユーザーの最新セーブデータを取得 (v3・署名付き)
      description: 指定ユーザーの最新セーブデータを返します。`sig` で HMAC 認証を行います。
      parameters:
        - name: user_id
          in: path
          required: true
          schema: { type: string }
        - name: sig
          in: query
          required: true
          description: HMAC-SHA256 署名
          schema: { type: string }
      responses:
        '200':
          description: セーブデータ
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SaveDataV2'
        '401': { description: 署名認証失敗 }
        '404': { description: データが見つかりません }
        '500': { description: サーバー内部エラー }

  /v3/statistics:
    get:
      tags: [ v3 ]
      summary: グローバル統計を取得 (v2・上位1000件)
      description: >
        各ランキングを最大 **1000 件** まで（/v2/statistics は 500 件まで）と、
        全ユーザーのメダル総量をまとめて返します。
      responses:
        '200':
          description: 統計データ (ランキング上限 1000)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatisticsV3'
        '500': { description: サーバー内部エラー }

  /v3/achievements/rates:
    get:
      tags: [ v3 ]
      summary: 実績取得率を取得
      description: 各実績IDの取得率（取得したユーザー数 / 全ユーザー数）を返します。
      responses:
        '200':
          description: 実績取得率データ
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AchievementRates'
        '500': { description: サーバー内部エラー }

  /v4/data:
    get:
      tags: [ v4 ]
      summary: セーブデータを送信 (v4)
      description: JSON 化したセーブデータを GET パラメータで送信して保存します。
      parameters:
        - name: data
          in: query
          required: true
          schema: { type: string }
          description: URL エンコード済み JSON セーブデータ
        - name: user_id
          in: query
          required: true
          schema: { type: string }
        - name: sig
          in: query
          required: true
          schema: { type: string }
      responses:
        '200': { description: 正常に保存されました }
        '400': { description: 無効なパラメータ }
        '401': { description: 署名認証失敗 }
        '409': { description: 同一データの重複検出 }
        '500': { description: サーバー内部エラー }

  /v4/users/{user_id}/data:
    get:
      tags: [ v4 ]
      summary: ユーザーの最新セーブデータを取得 (v4・署名付き)
      description: 指定ユーザーの最新セーブデータを返します。`sig` で HMAC 認証を行います。
      parameters:
        - name: user_id
          in: path
          required: true
          schema: { type: string }
        - name: sig
          in: query
          required: true
          description: HMAC-SHA256 署名
          schema: { type: string }
      responses:
        '200':
          description: セーブデータ
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SaveDataV2'
        '401': { description: 署名認証失敗 }
        '404': { description: データが見つかりません }
        '500': { description: サーバー内部エラー }

  /v4/statistics:
    get:
      tags: [ v4 ]
      summary: グローバル統計を取得 (v4・上位1000件・最適化版)
      description: >
        最適化された統計データを最大 **1000 件** まで返します。
        v3_user_latest_save_data テーブルを使用して高速化されています。
      responses:
        '200':
          description: 統計データ (ランキング上限 1000)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatisticsV4'
        '500': { description: サーバー内部エラー }

  /v4/achievements/rates:
    get:
      tags: [ v4 ]
      summary: 実績取得率を取得 (v4)
      description: 各実績IDの取得率（取得したユーザー数 / 全ユーザー数）を返します。
      responses:
        '200':
          description: 実績取得率データ
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AchievementRates'
        '500': { description: サーバー内部エラー }

components:
  schemas:
    # v1 schema
    GameData:
      type: object
      properties:
        version: { type: integer }
        id: { type: string }
        user_id:
          type: string
          x-oapi-codegen-extra-tags: { db: 'user_id' }
        have_medal:
          type: integer
          x-oapi-codegen-extra-tags: { db: 'have_medal' }
        in_medal:
          type: integer
          x-oapi-codegen-extra-tags: { db: 'in_medal' }
        out_medal:
          type: integer
          x-oapi-codegen-extra-tags: { db: 'out_medal' }
        slot_hit:
          type: integer
          x-oapi-codegen-extra-tags: { db: 'slot_hit' }
        get_shirbe:
          type: integer
          x-oapi-codegen-extra-tags: { db: 'get_shirbe' }
        start_slot:
          type: integer
          x-oapi-codegen-extra-tags: { db: 'start_slot' }
        shirbe_buy300:
          type: integer
          x-oapi-codegen-extra-tags: { db: 'shirbe_buy300' }
        medal_1:
          type: integer
          x-oapi-codegen-extra-tags: { db: 'medal_1' }
        medal_2:
          type: integer
          x-oapi-codegen-extra-tags: { db: 'medal_2' }
        medal_3:
          type: integer
          x-oapi-codegen-extra-tags: { db: 'medal_3' }
        medal_4:
          type: integer
          x-oapi-codegen-extra-tags: { db: 'medal_4' }
        medal_5:
          type: integer
          x-oapi-codegen-extra-tags: { db: 'medal_5' }
        R_medal:
          type: integer
          x-oapi-codegen-extra-tags: { db: 'R_medal' }
        total_play_time:
          type: integer
          x-oapi-codegen-extra-tags: { db: 'total_play_time' }
        fever:
          type: integer
        created_at:
          type: string
          format: date-time
          x-oapi-codegen-extra-tags: { db: 'created_at' }
        max_chain_item:
          type: integer
          x-oapi-codegen-extra-tags: { db: 'max_chain_item' }
        max_chain_orange:
          type: integer
          x-oapi-codegen-extra-tags: { db: 'max_chain_orange' }
        max_chain_rainbow:
          type: integer
          x-oapi-codegen-extra-tags: { db: 'max_chain_rainbow' }
        sugoroku_steps:
          type: integer
          x-oapi-codegen-extra-tags: { db: 'sugoroku_steps' }
        jackpots:
          type: integer
          x-oapi-codegen-extra-tags: { db: 'jackpots' }
        max_jackpot_win:
          type: integer
          x-oapi-codegen-extra-tags: { db: 'max_jackpot_win' }
        max_total_jackpot:
          type: integer
          x-oapi-codegen-extra-tags: { db: 'max_total_jackpot' }
        max_total_ultimate:
          type: integer
          x-oapi-codegen-extra-tags: { db: 'max_total_ultimate' }

    # v2 schemas
    SaveDataV2:
      type: object
      x-oapi-codegen-extra-tags: { db: 'save_data_v2' }
      properties:
        legacy:
          type: integer
          x-oapi-codegen-extra-tags: { db: 'legacy' }
        version:
          type: integer
          x-oapi-codegen-extra-tags: { db: 'version' }
        credit:
          type: integer
          format: int64
          x-oapi-codegen-extra-tags: { db: 'credit' }
        credit_all:
          type: integer
          format: int64
          x-oapi-codegen-extra-tags: { db: 'credit_all' }
        medal_in:
          type: integer
          x-oapi-codegen-extra-tags: { db: 'medal_in' }
        medal_get:
          type: integer
          format: int64
          x-oapi-codegen-extra-tags: { db: 'medal_get' }
        ball_get:
          type: integer
          format: int64
          x-oapi-codegen-extra-tags: { db: 'ball_get' }
        ball_chain:
          type: integer
          x-oapi-codegen-extra-tags: { db: 'ball_chain' }
        slot_start:
          type: integer
          format: int64
          x-oapi-codegen-extra-tags: { db: 'slot_start' }
        slot_startfev:
          type: integer
          format: int64
          x-oapi-codegen-extra-tags: { db: 'slot_startfev' }
        slot_hit:
          type: integer
          format: int64
          x-oapi-codegen-extra-tags: { db: 'slot_hit' }
        slot_getfev:
          type: integer
          format: int64
          x-oapi-codegen-extra-tags: { db: 'slot_getfev' }
        sqr_get:
          type: integer
          x-oapi-codegen-extra-tags: { db: 'sqr_get' }
        sqr_step:
          type: integer
          format: int64
          x-oapi-codegen-extra-tags: { db: 'sqr_step' }
        jack_get:
          type: integer
          x-oapi-codegen-extra-tags: { db: 'jack_get' }
        jack_startmax:
          type: integer
          format: int64
          x-oapi-codegen-extra-tags: { db: 'jack_startmax' }
        jack_totalmax:
          type: integer
          x-oapi-codegen-extra-tags: { db: 'jack_totalmax' }
        ult_get:
          type: integer
          x-oapi-codegen-extra-tags: { db: 'ult_get' }
        ult_combomax:
          type: integer
          x-oapi-codegen-extra-tags: { db: 'ult_combomax' }
        ult_totalmax:
          type: integer
          x-oapi-codegen-extra-tags: { db: 'ult_totalmax' }
        rmshbi_get:
          type: integer
          x-oapi-codegen-extra-tags: { db: 'rmshbi_get' }
        buy_shbi:
          type: integer
          x-oapi-codegen-extra-tags: { db: 'buy_shbi' }
        bstp_step:
          type: integer
          x-oapi-codegen-extra-tags: { db: 'bstp_step' }
        bstp_rwd:
          type: integer
          x-oapi-codegen-extra-tags: { db: 'bstp_rwd' }
        buy_total:
          type: integer
          x-oapi-codegen-extra-tags: { db: 'buy_total' }
        sp_use:
          type: integer
          x-oapi-codegen-extra-tags: { db: 'sp_use' }
        hide_record:
          type: integer
          x-oapi-codegen-extra-tags: { db: 'hide_record' }
        cpm_max:
          type: number
          format: double
          x-oapi-codegen-extra-tags: { db: 'cpm_max' }
        jack_totalmax_v2:
          type: integer
          format: int64
          x-oapi-codegen-extra-tags: { db: 'jack_totalmax_v2' }
        ult_totalmax_v2:
          type: integer
          format: int64
          x-oapi-codegen-extra-tags: { db: 'ult_totalmax_v2' }
        palball_get:
          type: number
          format: double
          x-oapi-codegen-extra-tags: { db: 'palball_get' }
        pallot_lot_t0:
          type: number
          format: double
          x-oapi-codegen-extra-tags: { db: 'pallot_lot_t0' }
        pallot_lot_t1:
          type: number
          format: double
          x-oapi-codegen-extra-tags: { db: 'pallot_lot_t1' }
        pallot_lot_t2:
          type: number
          format: double
          x-oapi-codegen-extra-tags: { db: 'pallot_lot_t2' }
        pallot_lot_t3:
          type: number
          format: double
          x-oapi-codegen-extra-tags: { db: 'pallot_lot_t3' }
        jacksp_get_all:
          type: number
          format: double
          x-oapi-codegen-extra-tags: { db: 'jacksp_get_all' }
        jacksp_get_t0:
          type: number
          format: double
          x-oapi-codegen-extra-tags: { db: 'jacksp_get_t0' }
        jacksp_get_t1:
          type: number
          format: double
          x-oapi-codegen-extra-tags: { db: 'jacksp_get_t1' }
        jacksp_get_t2:
          type: number
          format: double
          x-oapi-codegen-extra-tags: { db: 'jacksp_get_t2' }
        jacksp_get_t3:
          type: number
          format: double
          x-oapi-codegen-extra-tags: { db: 'jacksp_get_t3' }
        jacksp_startmax:
          type: number
          format: double
          x-oapi-codegen-extra-tags: { db: 'jacksp_startmax' }
        jacksp_totalmax:
          type: number
          format: double
          x-oapi-codegen-extra-tags: { db: 'jacksp_totalmax' }
        task_cnt:
          type: number
          format: double
          x-oapi-codegen-extra-tags: { db: 'task_cnt' }
        totem_altars:
          type: integer
          x-oapi-codegen-extra-tags: { db: 'totem_altars' }
        totem_altars_credit:
          type: integer
          format: int64
          x-oapi-codegen-extra-tags: { db: 'totem_altars_credit' }
        dc_palball_get:
          type: object
          additionalProperties: { type: integer }
          x-oapi-codegen-extra-tags: { table: 'save_data_v2_palball_get' }
        dc_palball_jp:
          type: object
          additionalProperties: { type: integer }
          x-oapi-codegen-extra-tags: { table: 'save_data_v2_palball_jp' }
        l_perks:
          type: array
          items: { type: integer }
          x-oapi-codegen-extra-tags: { table: 'save_data_v2_perks' }
        l_perks_credit:
          type: array
          items:
            type: integer
            format: int64
          x-oapi-codegen-extra-tags: { table: 'save_data_v2_perks_credit' }
        l_totems:
          type: array
          items: { type: integer }
          x-oapi-codegen-extra-tags: { table: 'save_data_v2_totems' }
        l_totems_credit:
          type: array
          items:
            type: integer
            format: int64
          x-oapi-codegen-extra-tags: { table: 'save_data_v2_totems_credit' }
        l_totems_set:
          type: array
          items: { type: integer }
          x-oapi-codegen-extra-tags: { table: 'save_data_v2_totems_placement' }
        firstboot:
          type: string
        lastsave:
          type: string
        playtime:
          type: integer
          format: int64
        dc_medal_get:
          type: object
          additionalProperties: { type: integer }
          x-oapi-codegen-extra-tags: { table: 'save_data_v2_medal_get' }
        dc_ball_get:
          type: object
          additionalProperties: { type: integer }
          x-oapi-codegen-extra-tags: { table: 'save_data_v2_ball_get' }
        dc_ball_chain:
          type: object
          additionalProperties: { type: integer }
          x-oapi-codegen-extra-tags: { table: 'save_data_v2_ball_chain' }
        l_achieve:
          type: array
          items: { type: string }
          x-oapi-codegen-extra-tags: { table: 'save_data_v2_achievements' }

    RankingEntry:
      type: object
      properties:
        user_id: { type: string }
        value: { type: integer, format: int64 }
        created_at: { type: string, format: date-time }

    StatisticsV2:
      type: object
      properties:
        max_chain_orange:
          type: array
          items: { $ref: '#/components/schemas/RankingEntry' }
        max_chain_rainbow:
          type: array
          items: { $ref: '#/components/schemas/RankingEntry' }
        max_total_jackpot:
          type: array
          items: { $ref: '#/components/schemas/RankingEntry' }
        total_medals:
          type: integer

    StatisticsV3:
      type: object
      properties:
        max_chain_orange:
          type: array
          items: { $ref: '#/components/schemas/RankingEntry' }
        max_chain_rainbow:
          type: array
          items: { $ref: '#/components/schemas/RankingEntry' }
        jack_startmax:
          type: array
          items: { $ref: '#/components/schemas/RankingEntry' }
        jack_totalmax:
          type: array
          items: { $ref: '#/components/schemas/RankingEntry' }
        jack_totalmax_v2:
          type: array
          items: { $ref: '#/components/schemas/RankingEntry' }
        ult_totalmax_v2:
          type: array
          items: { $ref: '#/components/schemas/RankingEntry' }
        jacksp_startmax:
          type: array
          items: { $ref: '#/components/schemas/RankingEntry' }
        golden_palball_get:
          type: array
          items: { $ref: '#/components/schemas/RankingEntry' }
        cpm_max:
          type: array
          items: { $ref: '#/components/schemas/RankingEntry' }
        ult_combomax:
          type: array
          items: { $ref: '#/components/schemas/RankingEntry' }
        ult_totalmax:
          type: array
          items: { $ref: '#/components/schemas/RankingEntry' }
        sp_use:
          type: array
          items: { $ref: '#/components/schemas/RankingEntry' }
        buy_shbi:
          type: array
          items: { $ref: '#/components/schemas/RankingEntry' }
        achievements_count:
          type: array
          items: { $ref: '#/components/schemas/RankingEntry' }
        total_medals:
          type: integer

    AchievementRates:
      type: object
      properties:
        total_users:
          type: integer
          description: 総ユーザー数
        achievement_rates:
          type: object
          additionalProperties:
            type: object
            properties:
              count:
                type: integer
                description: この実績を取得したユーザー数
              rate:
                type: number
                format: float
                description: 取得率（0.0-1.0）
          description: 実績IDごとの取得率データ

    # v4 schema
    StatisticsV4:
      type: object
      properties:
        achievements_count:
          type: array
          items:
            $ref: '#/components/schemas/RankingEntry'
        jacksp_startmax:
          type: array
          items:
            $ref: '#/components/schemas/RankingEntry'
        golden_palball_get:
          type: array
          items:
            $ref: '#/components/schemas/RankingEntry'
        cpm_max:
          type: array
          items:
            $ref: '#/components/schemas/RankingEntry'
        max_chain_rainbow:
          type: array
          items:
            $ref: '#/components/schemas/RankingEntry'
        jack_totalmax_v2:
          type: array
          items:
            $ref: '#/components/schemas/RankingEntry'
        ult_combomax:
          type: array
          items:
            $ref: '#/components/schemas/RankingEntry'
        ult_totalmax_v2:
          type: array
          items:
            $ref: '#/components/schemas/RankingEntry'
        sp_use:
          type: array
          items:
            $ref: '#/components/schemas/RankingEntry'
        total_medals:
          type: integer
          description: 全ユーザーのメダル合計

